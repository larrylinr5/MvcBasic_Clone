@model MvcBasic_Clone.Models.Info
@{
    ViewBag.Title = "UserInfo";
}

<h2>UserInfo</h2>

@using (Html.BeginForm("UserData","Form"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <h4>Info</h4>
        <hr />
        <div class="row">
            <div class="col-lg-3 sidebar">
                <img src="~/Assets/iPad.jpg" />
            </div>
            <div class="col-lg-9 sidebar">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">

                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control text-hover",placeholder="輸入名字" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control text-2" } })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-info" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="輸入" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/boundles/jqueryval")
}

@section endJS
{
    <script>
        function FetName() {
            alert('aaaaaa');
        }
    </script>
}

@section topCSS
{
    <style>
        body {
            background-color: lightgray;
        }
        .text-hover:hover {
            background-color: cadetblue;
        }
        /*.field-validation-error {
            color:blueviolet;
        }*/
        
    </style>
}
